#cloud-config
package_upgrade: true
packages:
  - binutils
  - curl
  - mysql-server
  - sysstat
  - collectd
  - collectd-utils
  - ghostscript
  - apache2
  - openssl
  - php
  - libapache2-mod-php
  - php-bcmath
  - php-curl
  - php-imagick
  - php-json
  - php-gd
  - php-intl
  - php-mbstring
  - php-soap
  - php-xml
  - php-xmlrpc
  - php-zip
  - php-fpm
  - php-mysql
  - nfs-common
  - certbot
  - python3-certbot-apache
  - python3
  - python-is-python3
  - apt-transport-https
  - ca-certificates
  - gnupg
  - lsb-release

write_files:

- path: /tmp/phpinfo.php
  content: |
    <?php phpinfo(); ?>

- path: /tmp/heartbeat.php
  content: |
    <html>
        <body>
            <p>
                site is running.
            </p>
            <?php echo gethostname(); ?>
        </body>
    </html>

- path: /tmp/wp-config.php
  content: |
      <?php
      define('DB_NAME', 'wordpressdb');
      define('DB_USER', 'wpdbuser');
      define('DB_PASSWORD', 'wpdbpassword');
      define('DB_HOST', 'localhost');
      define( 'DB_CHARSET', 'utf8' );
      define( 'DB_COLLATE', '' );
      define('MYSQL_CLIENT_FLAGS', MYSQLI_CLIENT_SSL);
      define('FORCE_SSL_ADMIN', true);
      
      // in some setups HTTP_X_FORWARDED_PROTO might contain 
      // a comma-separated list e.g. http,https
      // so check for https existence
      // if ( strpos(['HTTP_X_FORWARDED_PROTO'], 'https' ) !== false) 
      //   ['HTTPS']='on';
      $table_prefix = 'wp_';

      if ( ! defined( 'ABSPATH' ) ) {
        define( 'ABSPATH', __DIR__ . '/' );
      }

      require_once ABSPATH . 'wp-settings.php';
       ?>

- path: /tmp/wordpressdomain.com.conf
  content: |
    <VirtualHost *:80>

      ServerAdmin webmaster@wordpressdomain.com
      ServerName wordpressdomain.com
      ServerAlias www.wordpressdomain.com
      DocumentRoot /var/www/wordpressdomain.com/public_html
      LogLevel warn
      ErrorLog /var/log/apache2/wordpressdomain.com-error.log
      CustomLog /var/log/apache2/wordpressdomain.com-access.log combined
      <Directory /var/www/wordpressdomain.com/public_html>
        Options FollowSymLinks
        AllowOverride Limit Options FileInfo
        DirectoryIndex index.php index.html
        Require all granted
      </Directory>
      <Directory /var/www/wordpressdomain.com/public_html/wp-content>
        Options FollowSymLinks
        Require all granted
      </Directory>
    </VirtualHost>

runcmd:
  # Docker installation steps
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
  - echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
  - apt update
  - apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
  - curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  - chmod +x /usr/local/bin/docker-compose
  - systemctl start docker
  - systemctl enable docker
  - usermod -aG docker azureuser
  # WordPress and application setup
  - mkdir -p /var/www/wordpressdomain.com/public_html
  - /usr/bin/wget https://cacerts.digicert.com/BaltimoreCyberTrustRoot.crt.pem -P /usr/local/share/ca-certificates
  - /usr/bin/openssl x509 -outform der -in /usr/local/share/ca-certificates/BaltimoreCyberTrustRoot.crt.pem -out /usr/local/share/ca-certificates/certificate.crt
  - /usr/sbin/update-ca-certificates
  - /usr/bin/wget http://wordpress.org/latest.tar.gz -P /var/www/wordpressdomain.com/public_html
  - tar xzvf /var/www/wordpressdomain.com/public_html/latest.tar.gz -C /var/www/wordpressdomain.com/public_html --strip-components=1
  - cd /tmp; /usr/bin/curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
  - chmod +x /tmp/wp-cli.phar; mv /tmp/wp-cli.phar /usr/bin/wp
  - cd /tmp; /usr/bin/wget https://azcopyvnext.azureedge.net/releases/release-10.30.0-20241018/azcopy_linux_amd64_10.30.0.tar.gz
  - cd /tmp; tar zxvf azcopy_linux_amd64_10.30.0.tar.gz
  - cp /tmp/azcopy_linux_amd64_10.30.0/azcopy /usr/bin; chmod 755 /usr/bin/azcopy
  # Azure CLI installation for Ubuntu 24.04
  - curl -sLS https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | tee /etc/apt/trusted.gpg.d/microsoft.gpg > /dev/null
  - echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/azure-cli.list
  - apt update
  - apt install -y azure-cli
  - cp /tmp/phpinfo.php /var/www/wordpressdomain.com/public_html/phpinfo.php
  - cp /tmp/heartbeat.php /var/www/wordpressdomain.com/public_html/heartbeat.php
  - cp /tmp/wp-config.php /var/www/wordpressdomain.com/public_html/wp-config.php
  - cp /tmp/wordpressdomain.com.conf  /etc/apache2/sites-available/wordpressdomain.com.conf
  - chown -R www-data:www-data /var/www/wordpressdomain.com/public_html
  - a2ensite wordpressdomain.com
  - a2enmod rewrite
  - a2enmod headers
  - a2dissite 000-default.conf
  - systemctl reload apache2
